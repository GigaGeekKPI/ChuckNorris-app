{"version":3,"sources":["components/Greeting.js","components/Category.js","components/CategoryList.js","components/ChooseForm.js","components/Joke.js","components/JokeList.js","components/Burger.js","App.js","serviceWorker.js","index.js"],"names":["Greeting","className","React","Component","Category","label","inForm","type","id","this","props","category","name","value","onChange","onSelect","style","display","htmlFor","length","inJoke","data","CategoryList","state","categories","fetch","method","then","res","json","setState","map","el","index","key","ChooseForm","decisionType","query","getRandom","bind","getFromCategory","getFromQuery","handleDecisionChange","onInputChange","onCategoryChange","handleSubmit","event","preventDefault","decision","joke","result","Math","floor","random","undefined","error","alert","isFavourite","addJoke","target","text","required","placeholder","onSubmit","checked","Joke","handleClick","removeFavourite","addFavourite","ms","shape","msAgo","Date","updated_at","onClick","color","width","height","viewBox","fill","xmlns","d","href","url","JokeList","jokes","Burger","icon","hidden","cx","cy","r","rx","transform","x","y","toggle","App","favourite","JSON","parse","localStorage","getItem","tick","item","unshift","setItem","stringify","console","log","itemIndex","indexOf","splice","aside","asideMove","window","matchMedia","matches","left","CSSTransition","in","timeout","classNames","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8798f901.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Greeting extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='Greeting'>\r\n        <h2 className='greeting-header'>Hey!</h2>\r\n        <p className='greeting-paragraph'>Let's find a joke for you:</p>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Greeting;","import React from 'react'\r\n\r\nclass Category extends React.Component {\r\n\r\n    render() {\r\n        let inForm = (\r\n            <>\r\n                <input type='radio' id={this.props.category} name='category' value={this.props.category} onChange={this.props.onSelect} style={{ display: 'none' }} />\r\n                <div className='Category'>\r\n                    <label htmlFor={this.props.category}>{this.props.category}</label>\r\n                </div>\r\n            </>\r\n        );\r\n        let label;\r\n        if (this.props.category.length) {\r\n            label = <label>{this.props.category}</label>\r\n        }\r\n        let inJoke = <div className='Category'>\r\n            {label}\r\n        </div>\r\n\r\n        let data = 'onSelect' in this.props ? inForm : inJoke;\r\n\r\n        return (\r\n            <>{data}</>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import React from 'react'\r\nimport Category from './Category.js'\r\n\r\nclass CategoryList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({\r\n            categories: await fetch('https://api.chucknorris.io/jokes/categories', {\r\n                method: 'GET'\r\n            }).then(res => res.json())\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.categories.map((el, index) => <Category category={el} onSelect={this.props.onChange} key={index} />)}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryList;","import React from 'react';\r\nimport CategoryList from './CategoryList.js'\r\n\r\nclass ChooseForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            decisionType: 'random',\r\n            category: '',\r\n            query: ''\r\n        }\r\n        //Fetch jokes\r\n        this.getRandom = this.getRandom.bind(this);\r\n        this.getFromCategory = this.getFromCategory.bind(this);\r\n        this.getFromQuery = this.getFromQuery.bind(this);\r\n\r\n        //Form handlers\r\n        this.handleDecisionChange = this.handleDecisionChange.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onCategoryChange = this.onCategoryChange.bind(this);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const decision = this.state.decisionType;\r\n        const query = this.state.query;\r\n        let joke;\r\n\r\n        switch (decision) {\r\n            case 'random':\r\n                joke = await this.getRandom();\r\n                break;\r\n            case 'category':\r\n                joke = await this.getFromCategory(this.state.category);\r\n                break;\r\n            case 'search':\r\n                if (query.length > 0) {\r\n                    let data = await this.getFromQuery(query).then(res => res.result);\r\n                    joke = data[Math.floor(Math.random() * data.length)];\r\n\r\n                } else {\r\n                    joke = await this.getRandom();\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (joke !== undefined && !joke.error) {\r\n            joke.isFavourite = false;\r\n            this.props.addJoke(joke);\r\n        }\r\n        else {\r\n            alert('Error');\r\n        }\r\n    }\r\n\r\n    handleDecisionChange(event) {\r\n        this.setState({\r\n            decisionType: event.target.value,\r\n            category: '',\r\n            query: ''\r\n        });\r\n    }\r\n\r\n    onInputChange(event) {\r\n        this.setState({\r\n            query: event.target.value\r\n        })\r\n    }\r\n\r\n    onCategoryChange(event) {\r\n        this.setState({\r\n            category: event.target.value\r\n        });\r\n    }\r\n\r\n    async getRandom() {\r\n        let data = await fetch('https://api.chucknorris.io/jokes/random', {\r\n            method: 'GET'\r\n        }).then(res => res.json());\r\n\r\n        return data;\r\n    }\r\n\r\n    async getFromCategory(category) {\r\n        let data = await fetch(`https://api.chucknorris.io/jokes/random?category=${category}`, {\r\n            method: 'GET'\r\n        }).then(res => res.json());\r\n\r\n        return data;\r\n    }\r\n\r\n    async getFromQuery(query) {\r\n        let data = await fetch(`https://api.chucknorris.io/jokes/search?query=${query}`, {\r\n            method: 'GET'\r\n        }).then(res => res.json());\r\n\r\n        return data;\r\n    }\r\n\r\n    render() {\r\n\r\n        //Display or not display - ok\r\n        let text;\r\n        if (this.state.decisionType === 'search') {\r\n            text = <input type='text' value={this.state.query} onChange={this.onInputChange} required placeholder='Free text search...'/>;\r\n        }\r\n\r\n        let categories;\r\n        if (this.state.decisionType === 'category') {\r\n            categories = <CategoryList category={this.state.category} onChange={this.onCategoryChange} />;\r\n        }\r\n\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label className='radio-container'>\r\n                    <input type='radio' name='ReqType' value='random' checked={this.state.decisionType === 'random'} onChange={this.handleDecisionChange} />\r\n                    <span>Random</span>\r\n                </label>\r\n                <label className='radio-container'>\r\n                    <input type='radio' name='ReqType' value='category' checked={this.state.decisionType === 'category'} onChange={this.handleDecisionChange} />\r\n                    <span>From categories</span>\r\n                </label>\r\n                {categories}\r\n                <label className='radio-container'>\r\n                    <input type='radio' name='ReqType' value='search' checked={this.state.decisionType === 'search'} onChange={this.handleDecisionChange} />\r\n                    <span>Search</span>\r\n                </label>\r\n                {text}\r\n                <button className='submit-button'>Get a joke</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChooseForm;","import React from 'react';\r\nimport Category from './Category'\r\n\r\nfunction convertMsToHours(ms) {\r\n    return Math.floor(ms / 1000 / 60 / 60);\r\n}\r\n\r\nclass Joke extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            joke: this.props.joke\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        if (!this.props.joke.isFavourite) {\r\n            this.props.joke.isFavourite = !this.props.joke.isFavourite;\r\n            this.props.addFavourite(this.props.joke);\r\n        } else {\r\n            this.props.joke.isFavourite = !this.props.joke.isFavourite;\r\n            this.props.removeFavourite(this.props.joke);\r\n        }\r\n        this.setState({\r\n            joke: this.props.joke\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let shape = this.props.joke.isFavourite ? 'favorite' : 'favorite_border';\r\n        let now = new Date();\r\n        let msAgo = now - new Date(this.props.joke.updated_at);\r\n        return (\r\n            <article className='joke-container'>\r\n                <button onClick={this.handleClick} className='like-button'>\r\n                    <span className=\"material-icons\" style={{ color: '#FF6767' }}>{shape}</span>\r\n                </button>\r\n                <section className='joke-content'>\r\n                    <p className=\"message\">\r\n                        <svg width=\"20\" height=\"19\" viewBox=\"0 0 20 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M17.2504 0H2.74963C1.23352 0 0 1.23328 0 2.74963V11.6238C0 13.1367 1.22815 14.368 2.73987 14.3734V18.4004L8.5271 14.3734H17.2504C18.7665 14.3734 20 13.1399 20 11.6238V2.74963C20 1.23328 18.7665 0 17.2504 0ZM18.8281 11.6238C18.8281 12.4937 18.1204 13.2015 17.2504 13.2015H8.15942L3.91174 16.1573V13.2015H2.74963C1.87964 13.2015 1.17188 12.4937 1.17188 11.6238V2.74963C1.17188 1.87952 1.87964 1.17188 2.74963 1.17188H17.2504C18.1204 1.17188 18.8281 1.87952 18.8281 2.74963V11.6238Z\" fill=\"#ABABAB\" />\r\n                            <path d=\"M5.35291 4.14075H14.6471V5.31262H5.35291V4.14075Z\" fill=\"#ABABAB\" />\r\n                            <path d=\"M5.35291 6.64075H14.6471V7.81262H5.35291V6.64075Z\" fill=\"#ABABAB\" />\r\n                            <path d=\"M5.35291 9.14075H14.6471V10.3126H5.35291V9.14075Z\" fill=\"#ABABAB\" />\r\n                        </svg>\r\n                    </p>\r\n                    <div className='joke-content-info'>\r\n                        <p className='joke-content-info-id'>\r\n                            ID:<a href={this.props.joke.url}>{this.props.joke.id}</a>\r\n                            <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M9.54545 0H5.90909C5.65806 0 5.45454 0.203515 5.45454 0.45455C5.45454 0.705585 5.65806 0.9091 5.90909 0.9091H8.44809L3.76952 5.58768C3.59204 5.76516 3.59204 6.05298 3.76952 6.2305C3.85825 6.31923 3.97458 6.36362 4.09091 6.36362C4.20724 6.36362 4.32359 6.31923 4.4123 6.23048L9.09092 1.55191V4.09091C9.09092 4.34194 9.29444 4.54546 9.54547 4.54546C9.7965 4.54546 10 4.34194 10 4.09091V0.45455C10 0.203515 9.79648 0 9.54545 0Z\" fill=\"#8EA7FF\" />\r\n                                <path d=\"M7.72725 4.54543C7.47622 4.54543 7.2727 4.74894 7.2727 4.99998V9.09089H0.90908V2.72725H4.99999C5.25103 2.72725 5.45454 2.52373 5.45454 2.2727C5.45454 2.02166 5.25103 1.81817 4.99999 1.81817H0.45455C0.203515 1.81817 0 2.02168 0 2.27272V9.54544C0 9.79645 0.203515 9.99997 0.45455 9.99997H7.72727C7.97831 9.99997 8.18182 9.79645 8.18182 9.54542V4.99998C8.1818 4.74894 7.97829 4.54543 7.72725 4.54543Z\" fill=\"#8EA7FF\" />\r\n                            </svg>\r\n\r\n                        </p>\r\n                        <p className='joke-content-info-value'>{this.props.joke.value}</p>\r\n                        <div className='joke-secondary-content'>\r\n                            <p>Last update: <span>{convertMsToHours(msAgo)} hours ago</span></p>\r\n                            <Category category={this.props.joke.categories} />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Joke;","import React from 'react';\r\nimport Joke from './Joke.js'\r\nclass JokeList extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.jokes.map(el => <Joke joke={el} addFavourite={this.props.addFavourite} removeFavourite={this.props.removeFavourite} key={Math.random()}/>)}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JokeList;","import React from 'react'\r\n\r\nclass Burger extends React.Component {\r\n    render() {\r\n        let icon;\r\n\r\n        if (!this.props.hidden) {\r\n            icon = <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <circle cx=\"14\" cy=\"14\" r=\"14\" fill=\"#333333\" />\r\n                <rect x=\"7\" y=\"16\" width=\"14\" height=\"2\" rx=\"1\" fill=\"white\" />\r\n                <rect x=\"7\" y=\"10\" width=\"14\" height=\"2\" rx=\"1\" fill=\"white\" />\r\n            </svg>\r\n        } else {\r\n            icon = <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <circle cx=\"14\" cy=\"14\" r=\"14\" fill=\"#333333\" />\r\n                <rect width=\"14.8492\" height=\"2.12131\" rx=\"1.06065\" transform=\"matrix(0.707103 -0.707111 0.707103 0.707111 8 18.5)\" fill=\"white\" />\r\n                <rect width=\"14.8492\" height=\"2.12131\" rx=\"1.06065\" transform=\"matrix(0.707103 0.707111 -0.707103 0.707111 9.5 8)\" fill=\"white\" />\r\n            </svg>\r\n        }\r\n        return (\r\n            <div className='burger' onClick={this.props.toggle}>\r\n                <h2>Favourite</h2>\r\n                <div>\r\n                    {icon}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Burger;","import React from 'react';\r\nimport Greeting from './components/Greeting.js';\r\nimport ChooseForm from './components/ChooseForm.js';\r\nimport JokeList from './components/JokeList.js';\r\nimport Burger from './components/Burger.js'\r\nimport './App.css';\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\n// localStorage.removeItem('favourite');\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jokes: [],\r\n      favourite: JSON.parse(localStorage.getItem('favourite') || '[]'),\r\n      tick: false,\r\n      hidden: false\r\n    }\r\n\r\n    this.addJoke = this.addJoke.bind(this);\r\n    this.addFavourite = this.addFavourite.bind(this);\r\n    this.removeFavourite = this.removeFavourite.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  addJoke(item) {\r\n    const jokes = this.state.jokes;\r\n    jokes.unshift(item);\r\n    this.setState({\r\n      tick: !this.state.tick\r\n    })\r\n  }\r\n\r\n  addFavourite(item) {\r\n    const favourite = this.state.favourite;\r\n    favourite.unshift(item);\r\n    localStorage.setItem('favourite', JSON.stringify(favourite));\r\n    this.setState({\r\n      tick: !this.state.tick\r\n    })\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      hidden: !this.state.hidden\r\n    });\r\n    console.log(this.state.hidden);\r\n  }\r\n\r\n  removeFavourite(item) {\r\n    const favourite = this.state.favourite;\r\n    const itemIndex = favourite.indexOf(item);\r\n    favourite.splice(itemIndex, 1);\r\n    localStorage.setItem('favourite', JSON.stringify(favourite));\r\n    this.setState({\r\n      tick: !this.state.tick\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let aside;\r\n    let asideMove = window.matchMedia(\"(max-width: 480px)\").matches ? '0%' : '40%';\r\n\r\n    if (this.state.hidden) {\r\n      aside = <div className='hidden-aside-container' style={{ left: asideMove }}>\r\n        <aside className='Favourite'>\r\n          <JokeList jokes={this.state.favourite} removeFavourite={this.removeFavourite} />\r\n        </aside>\r\n      </div>\r\n    } else {\r\n      aside = <div className='hidden-aside-container' style={{ left: '100%' }}>\r\n        <aside className='Favourite'>\r\n          <JokeList jokes={this.state.favourite} removeFavourite={this.removeFavourite} />\r\n        </aside>\r\n      </div>\r\n    }\r\n    return (\r\n      <div className='App'>\r\n        <div className='main-container'>\r\n          <header className='main-header'>\r\n            <h1>MSI 2020</h1>\r\n          </header>\r\n          <main>\r\n            <article>\r\n              <Greeting />\r\n              <section>\r\n                <ChooseForm addJoke={this.addJoke} />\r\n              </section>\r\n              <JokeList jokes={this.state.jokes} addFavourite={this.addFavourite} removeFavourite={this.removeFavourite} />\r\n            </article>\r\n          </main>\r\n        </div>\r\n        <div className='aside-container'>\r\n          <aside className='Favourite'>\r\n            <h2>Favourite</h2>\r\n            <JokeList jokes={this.state.favourite} removeFavourite={this.removeFavourite} />\r\n          </aside>\r\n        </div>\r\n        <Burger toggle={this.toggle} hidden={this.state.hidden} />\r\n        {aside}\r\n        <CSSTransition in={this.state.hidden} timeout={300} classNames=\"example\">\r\n          <div className='dark-side-main' />\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}